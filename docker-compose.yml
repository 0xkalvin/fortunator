version: "2.4"

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: local.Dockerfile
      target: development
    entrypoint: npm start
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - "3000:3000"
    environment:  
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8080
    stdin_open: true

  postgres:
    image: postgres
    volumes:
      - $HOME/docker/volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=fortunator
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/tmp
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: local.Dockerfile
    entrypoint: ["java","-jar","/app.jar"]
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/fortunator
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - PROFILE_ACTIVE=dev
      - PORT=8080
    depends_on:
      - postgres
